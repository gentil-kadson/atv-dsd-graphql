package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"

	"github.com/gentil-kadson/atv-dsd-graphql/graph/model"
	"github.com/google/uuid"
)

// AddProject is the resolver for the addProject field.
func (resolver *mutationResolver) AddProject(ctx context.Context, project model.NewProject) (*model.Project, error) {
	uuid := uuid.New()
	newProject := model.Project{
		ID: uuid.String(),
		Name: project.Name,
		Description: project.Description,
		Technologies: project.Technologies,
		Link: project.Link,
	}
	resolver.projects = append(resolver.projects, &newProject)
	return &newProject, nil
}

// GetProjects is the resolver for the getProjects field.
func (resolver *queryResolver) GetProjects(ctx context.Context) ([]*model.Project, error) {
	return resolver.projects, nil
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }